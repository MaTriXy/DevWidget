apply plugin: 'com.android.application'
apply from: configFile('android-common-config.gradle')
apply plugin: 'com.novoda.android-command'
apply plugin: 'com.novoda.build-properties'
if (isPlay) {
    apply plugin: 'io.fabric'
    apply plugin: 'com.github.triplet.play'
}

buildProperties {
    signing.using(configFile('release.signing')) | configFile('debug.signing')
    secrets.using(configFile('secrets.properties'))
}

def secrets = buildProperties.secrets

android {
    defaultConfig {
        applicationId 'com.tasomaniac.devwidget'
        versionCode versions.versionCode
        versionName versions.versionName

        resConfigs 'en'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    signingConfigs {
        debug.storeFile configFile('debug.keystore')
        release {
            def signing = buildProperties.signing
            storeFile configFile(signing['storeFile'].string)
            storePassword signing['storePassword'].string
            keyAlias signing['keyAlias'].string
            keyPassword signing['keyPassword'].string
        }
    }

    buildTypes {
        debug {
            ext.enableCrashlytics = false
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions 'store'
    productFlavors {
        floss {
            applicationIdSuffix '.floss'
            versionNameSuffix '-floss'
        }
        play {}
    }
}

if (isPlay) {
    play {
        serviceAccountEmail = secrets['play_service_account'].or('').string
        pk12File = file(secrets['play_key_file'].or('no_file.p12').string)
        track = playPublishTrack
    }
}

dependencies {
    implementation project(':main')
    implementation project(':configure')
    implementation project(':settings')
    implementation project(':data')
    implementation project(':widget')

    playImplementation 'com.crashlytics.sdk.android:crashlytics:2.9.7'
    playImplementation 'com.google.firebase:firebase-core:16.0.6'

    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    androidTestImplementation "androidx.room:room-testing:$versions.room"
}

if (isPlay) {
    apply plugin: 'com.google.gms.google-services'
}
